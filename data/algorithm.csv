表面の単語,表面のヒント,表面の説明,裏面の単語,裏面のヒント,裏面の説明
アルゴリズム,問題解決手順,問題を解決するための手順や方法,Algorithm,有限性・明確性,プログラムの基礎。効率性が重要
計算量,処理効率,アルゴリズムの効率を表す指標,Computational Complexity,時間・空間計算量,O記法で表記。オーダーで評価
O記法,オーダー表記,計算量の増加率を表す記法,Big O Notation,最悪計算量,O(1)・O(n)・O(n²)・O(log n)など
線形探索,順次探索,先頭から順番に探索する方法,Linear Search,O(n),単純だが遅い。未整列データでも使用可
二分探索,半分ずつ探索,整列済みデータを半分ずつ絞り込む探索,Binary Search,O(log n),高速だが整列が前提条件
ハッシュ探索,ハッシュ表探索,ハッシュ関数を使った高速探索,Hash Search,O(1)平均,衝突処理が必要。チェイン法・オープンアドレス法
バブルソート,隣接交換,隣接要素を比較交換する整列法,Bubble Sort,O(n²),単純だが遅い。安定ソート
選択ソート,最小値選択,最小値を選んで先頭と交換する整列法,Selection Sort,O(n²),交換回数が少ない。不安定ソート
挿入ソート,挿入整列,整列済み部分に挿入していく整列法,Insertion Sort,O(n²)最悪・O(n)最良,ほぼ整列済みデータで高速
クイックソート,高速整列,基準値で分割して再帰的に整列,Quick Sort,O(n log n)平均,実用上最速。不安定ソート
マージソート,併合整列,分割して併合しながら整列,Merge Sort,O(n log n)保証,安定ソート。外部ソートに適用
ヒープソート,ヒープ整列,ヒープ構造を利用した整列,Heap Sort,O(n log n)保証,追加メモリ不要。不安定ソート
配列,連続領域,同じ型のデータを連続して格納,Array,インデックスアクセス,ランダムアクセスO(1)。挿入削除は遅い
リスト,連結構造,ポインタで要素を連結したデータ構造,List,線形リスト・連結リスト,挿入削除O(1)。ランダムアクセス遅い
スタック,LIFO,後入れ先出しのデータ構造,Stack,Last In First Out,プッシュ・ポップ操作。関数呼び出しに使用
キュー,FIFO,先入れ先出しのデータ構造,Queue,First In First Out,エンキュー・デキュー操作。待ち行列
木構造,階層構造,親子関係を持つ階層的データ構造,Tree Structure,根・節・葉,ファイルシステムや組織図
二分木,2つの子,各ノードが最大2つの子を持つ木,Binary Tree,左右の子ノード,完全二分木・平衡二分木
二分探索木,順序付き二分木,左＜親＜右の順序を持つ二分木,Binary Search Tree・BST,探索・挿入・削除,平均O(log n)。最悪O(n)
平衡木,バランス木,高さのバランスが取れた木構造,Balanced Tree,AVL木・赤黒木,常にO(log n)を保証
ヒープ,優先度付きキュー,親子間で大小関係を持つ完全二分木,Heap,最大ヒープ・最小ヒープ,優先度付きキューの実装
グラフ,頂点と辺,頂点と辺で構成されるデータ構造,Graph,有向・無向グラフ,ネットワークや地図を表現
隣接行列,グラフ表現1,グラフを行列で表現する方法,Adjacency Matrix,2次元配列,メモリO(n²)。密なグラフ向き
隣接リスト,グラフ表現2,グラフをリストで表現する方法,Adjacency List,頂点ごとのリスト,メモリO(V+E)。疎なグラフ向き
深さ優先探索,DFS,深い方向を優先して探索,Depth First Search,スタック使用,再帰またはスタックで実装
幅優先探索,BFS,同じ深さを優先して探索,Breadth First Search,キュー使用,最短経路探索に使用
ダイクストラ法,最短経路,重み付きグラフの最短経路探索,Dijkstra's Algorithm,負の重み不可,優先度付きキューで効率化
動的計画法,部分問題分割,部分問題の解を利用して全体を解く,Dynamic Programming・DP,メモ化,フィボナッチ数列・ナップサック問題
分割統治法,分割して解く,問題を分割して個別に解き統合,Divide and Conquer,マージソート・クイックソート,再帰的に問題を分割
貪欲法,局所最適選択,各段階で最適な選択をする手法,Greedy Algorithm,必ずしも最適解でない,コイン問題・ハフマン符号
バックトラック,後戻り探索,行き詰まったら前の状態に戻る探索,Backtracking,全探索の枝刈り,N-クイーン問題・数独
再帰,自己呼び出し,関数が自分自身を呼び出す手法,Recursion,ベースケース必須,階乗・フィボナッチ数列
反復,繰り返し,ループによる繰り返し処理,Iteration,for・while文,再帰より効率的な場合が多い
文字列探索,パターンマッチング,文字列中から特定パターンを探す,String Search,KMP法・BM法,テキストエディタの検索機能
正規表現,パターン記述,文字列パターンを表現する記法,Regular Expression・Regex,メタ文字使用,柔軟なパターンマッチング
圧縮アルゴリズム,データ圧縮,データサイズを削減する手法,Compression Algorithm,可逆・非可逆,ハフマン符号・LZ法・JPEG
暗号アルゴリズム,データ暗号化,データを暗号化する手法,Encryption Algorithm,共通鍵・公開鍵,AES・RSA・楕円曲線
誤り訂正符号,エラー訂正,データの誤りを検出・訂正する符号,Error Correction Code,パリティ・ハミング符号,通信やストレージで使用
チェックサム,誤り検出,データの誤りを検出する値,Checksum,CRC・MD5,データの完全性確認
乱数生成,ランダム値,予測困難な数値を生成,Random Number Generation,疑似乱数・真性乱数,シミュレーション・暗号に使用
モンテカルロ法,確率的手法,乱数を使った数値計算法,Monte Carlo Method,統計的シミュレーション,円周率計算・積分計算
シミュレーテッドアニーリング,焼きなまし法,確率的に局所解を脱出する最適化,Simulated Annealing,組合せ最適化,巡回セールスマン問題
遺伝的アルゴリズム,進化的計算,生物進化を模倣した最適化手法,Genetic Algorithm・GA,交叉・突然変異,最適化問題の近似解
ニューラルネットワーク,人工神経回路,脳の神経回路を模倣した計算モデル,Neural Network,深層学習の基礎,画像認識・自然言語処理
機械学習,データから学習,データから規則性を学習する技術,Machine Learning,教師あり・なし・強化,分類・回帰・クラスタリング
決定木,分岐による分類,条件分岐で分類する木構造,Decision Tree,ID3・C4.5,可視化しやすい分類手法
k-means法,クラスタリング,k個のクラスタに分類する手法,k-means Clustering,非階層的クラスタリング,初期値依存。計算量O(nkt)
最近傍法,k-NN,k個の近傍データで分類,k-Nearest Neighbors,怠惰学習,単純だが効果的な分類手法
ページング,仮想記憶管理,固定長ページ単位でメモリ管理,Paging,ページテーブル,仮想アドレスを物理アドレスに変換
ガベージコレクション,メモリ自動管理,不要メモリを自動的に解放,Garbage Collection・GC,マーク&スイープ,Javaなどで採用。停止時間が課題