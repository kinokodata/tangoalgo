表面の単語,表面のヒント,表面の説明,裏面の単語,裏面のヒント,裏面の説明
リレーショナルデータベース,表形式のDB,データを表形式で管理するデータベース,RDB,行と列で構成,関係モデルに基づくデータベース。SQLで操作
テーブル,表・関係,行と列で構成されるデータの集合,Table・リレーション,エンティティに対応,データベースの基本構成要素。1つの実体を表現
レコード,行・組,テーブルの1行分のデータ,Record・タプル,1件のデータ,表の横方向の1行。エンティティのインスタンス
フィールド,列・属性,テーブルの1列分の項目,Field・アトリビュート,データの項目,表の縦方向の1列。エンティティの属性
主キー,一意識別子,レコードを一意に識別するフィールド,Primary Key・PK,NULL不可・重複不可,テーブル内でレコードを特定する一意の値
外部キー,他テーブル参照,他のテーブルの主キーを参照するフィールド,Foreign Key・FK,参照整合性制約,テーブル間の関連を表現。親テーブルの主キーを参照
SQL,データベース言語,リレーショナルデータベースを操作する言語,Structured Query Language,DDL・DML・DCL,データの定義・操作・制御を行う標準言語
SELECT文,データ検索,テーブルからデータを検索するSQL文,SELECT,WHERE・ORDER BY・GROUP BY,最も基本的なSQL文。条件指定や並び替えが可能
INSERT文,データ追加,テーブルにデータを追加するSQL文,INSERT INTO,VALUES・複数行挿入,新しいレコードをテーブルに挿入
UPDATE文,データ更新,既存のデータを更新するSQL文,UPDATE SET,WHERE句で条件指定,指定した条件のレコードを更新
DELETE文,データ削除,テーブルからデータを削除するSQL文,DELETE FROM,WHERE句で条件指定,指定した条件のレコードを削除
JOIN,テーブル結合,複数のテーブルを結合して検索,JOIN,内部・外部結合,INNER JOIN・LEFT JOIN・RIGHT JOIN・FULL JOIN
内部結合,一致データのみ,両テーブルで一致するデータのみ結合,INNER JOIN,共通部分,結合条件を満たすレコードのみ取得
外部結合,片方全データ,片方のテーブルの全データを含む結合,OUTER JOIN,LEFT・RIGHT・FULL,一致しないレコードもNULLで結合
正規化,冗長性排除,データの重複を排除してテーブルを分割すること,Normalization,第1～第5正規形,データの一貫性維持と更新異常の防止
第1正規形,繰り返し排除,1つのセルに1つの値のみを格納,1NF,スカラ値のみ,繰り返し項目を別テーブルに分離
第2正規形,部分関数従属排除,主キーの一部に従属する属性を分離,2NF,完全関数従属,複合主キーの一部のみに依存する属性を排除
第3正規形,推移的関数従属排除,主キー以外の項目への従属を排除,3NF,直接従属のみ,非キー属性間の依存関係を排除
BCNF,ボイスコッド正規形,すべての決定項が候補キーである正規形,Boyce-Codd Normal Form,第3正規形の強化,関数従属性の左辺が必ず候補キー
非正規化,パフォーマンス優先,あえて正規化を崩してパフォーマンスを向上,Denormalization,冗長性許容,検索性能向上のため意図的に重複を許可
インデックス,索引,検索を高速化するための索引構造,Index,B-tree・ハッシュ,特定の列に作成。検索は速いが更新は遅い
ビュー,仮想テーブル,SELECT文の結果を仮想的なテーブルとして定義,View,実データなし,複雑なクエリを簡略化。セキュリティ向上
ストアドプロシージャ,保存された手続き,データベースに保存される一連の処理,Stored Procedure,プリコンパイル済み,複数のSQL文をまとめて実行。高速処理
トリガー,自動実行,特定の操作時に自動実行される処理,Trigger,BEFORE・AFTER,INSERT・UPDATE・DELETE時に自動起動
トランザクション,処理の単位,複数の処理をまとめた論理的な処理単位,Transaction,BEGIN・COMMIT・ROLLBACK,全部成功か全部失敗のどちらか
ACID特性,トランザクション特性,トランザクションが満たすべき4つの特性,ACID,原子性・一貫性・独立性・永続性,データベースの信頼性を保証する特性
原子性,全部か無か,トランザクションの処理が全て実行されるか全く実行されないか,Atomicity,All or Nothing,途中で失敗したら全て元に戻す
一貫性,整合性維持,トランザクション前後でデータの整合性が保たれる,Consistency,制約条件維持,データベースの制約が守られる
独立性,分離性,複数のトランザクションが互いに影響しない,Isolation,同時実行制御,他のトランザクションの途中結果は見えない
永続性,結果の保存,コミットされた結果は永続的に保存される,Durability,障害後も保持,システム障害が起きてもデータは失われない
ロック,排他制御,データへの同時アクセスを制御する仕組み,Lock,共有・排他ロック,デッドロック注意。悲観的・楽観的ロック
デッドロック,相互待機,複数のトランザクションが互いのロック解放を待つ状態,Deadlock,循環待機,タイムアウトや優先順位で解決
2相ロック,ロック取得・解放,ロック取得フェーズと解放フェーズを分ける方式,Two-Phase Locking,成長・縮小フェーズ,直列可能性を保証するロックプロトコル
ロールバック,処理取消,トランザクションの処理を取り消して元に戻す,ROLLBACK,障害時の復旧,エラー発生時にトランザクション開始前に戻す
コミット,処理確定,トランザクションの処理を確定させる,COMMIT,永続化,処理結果をデータベースに反映
チェックポイント,復旧点,障害復旧のための中間保存点,Checkpoint,ログ書き出し,定期的にメモリ内容をディスクに書き出す
データベース管理システム,DB管理ソフト,データベースを管理するソフトウェア,DBMS,Oracle・MySQL・PostgreSQL,データの定義・操作・制御・保護を提供
NoSQL,非リレーショナル,リレーショナルモデル以外のデータベース,Not Only SQL,KVS・ドキュメント・グラフ,大量データや非構造化データに対応
キーバリューストア,KVS,キーと値のペアでデータを管理,Key-Value Store,Redis・Memcached,シンプルで高速。キャッシュに適用
ドキュメント指向DB,JSON形式,JSONなどの文書形式でデータを管理,Document Database,MongoDB・CouchDB,スキーマレスで柔軟なデータ構造
ER図,実体関連図,エンティティとリレーションシップを表す図,Entity-Relationship Diagram,概念設計,データベース設計の基本。エンティティ間の関係を可視化
エンティティ,実体,データベースで管理する対象,Entity,四角形で表現,現実世界の実体や概念を表現
リレーションシップ,関連,エンティティ間の関係,Relationship,ひし形で表現,1対1・1対多・多対多の関係
カーディナリティ,対応数,リレーションシップの数的関係,Cardinality,1対1・1対多・多対多,エンティティ間の数的対応関係
データディクショナリ,データ辞書,データベースのメタデータを管理,Data Dictionary,システムカタログ,テーブル構造や制約条件を格納
バックアップ,複製保存,データの複製を保存すること,Backup,完全・差分・増分,障害に備えたデータ保護。定期実行が重要
リストア,復元,バックアップからデータを復元すること,Restore,障害復旧,バックアップデータを使ってデータベースを復元
レプリケーション,複製,データベースの内容を別サーバに複製,Replication,マスタ・スレーブ,可用性向上と負荷分散を実現
シャーディング,水平分割,データを複数のサーバに分散配置,Sharding,スケールアウト,大規模データを複数サーバで分散管理